
package GUI;

import BLL.NCC_BLL;
import BLL.NhanVienBLL;
import BLL.PNhapBLL;
import DTO.ChiTietPN_DTO;
import DTO.NCC_DTO;
import DTO.NhanVienDTO;
import DTO.PNhapDTO;
import java.awt.Color;
import java.sql.Date;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Frm_QLPhieuNhap extends javax.swing.JFrame {


    public Frm_QLPhieuNhap() {
        initComponents();
        addControl();
        lblMaPN.setText(" ");
        addComboBoxMaPN();
        addComboBoxNCC();
        addComboBoxNV();
        loadAll();
    }

    private void addControl(){
        this.setLocationRelativeTo(null);
        this.setTitle("PHẦN MỀM QUẢN LÝ CỬA HÀNG BÁNH KẸO MAILISA");
        panel.setBackground(Color.WHITE);
        btn2.setBackground(Color.PINK);
        btn3.setBackground(Color.PINK);
        btn4.setBackground(Color.PINK);       
        btnReport.setBackground(Color.PINK);       
    }
    
    private void addComboBoxMaPN(){
        ArrayList<PNhapDTO> arr = new ArrayList<PNhapDTO>();
	 PNhapBLL pnBLL = new PNhapBLL();
	 arr = pnBLL.getAllPN();	 
	 PNhapDTO pnDTO = new PNhapDTO();
	 for (int i = 0; i < arr.size(); i++) {
		 pnDTO = arr.get(i);
		 cbMaPN.addItem(pnDTO.getMA_PN());		 
	 }
    }
    private void addComboBoxNCC(){
        ArrayList<NCC_DTO> arr = new ArrayList<NCC_DTO>();
	 NCC_BLL nccBLL = new NCC_BLL();
	 arr = nccBLL.getAllNCC();	 
	 NCC_DTO accDTO = new NCC_DTO();
	 for (int i = 0; i < arr.size(); i++) {
		 accDTO = arr.get(i);
		 cb5.addItem(accDTO.getMA_NCC()+"-"+accDTO.getTEN_NCC());		 
	 }
    }
    private void addComboBoxNV(){
        ArrayList<NhanVienDTO> arr = new ArrayList<NhanVienDTO>();
	 NhanVienBLL nvBLL = new NhanVienBLL();
	 arr = nvBLL.getAllNvien();	 
	 NhanVienDTO nvDTO = new NhanVienDTO();
	 for (int i = 0; i < arr.size(); i++) {
		 nvDTO = arr.get(i);
		 cb4.addItem(nvDTO.getMA_NV()+"-"+nvDTO.getTEN_NV());		 
	 }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        lblMaPN = new javax.swing.JLabel();
        cb4 = new javax.swing.JComboBox<>();
        cb5 = new javax.swing.JComboBox<>();
        lblTien = new javax.swing.JLabel();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cbMaPN = new javax.swing.JComboBox<>();
        btnReport = new javax.swing.JButton();
        datePN = new com.toedter.calendar.JDateChooser();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("QUẢN LÝ PHIẾU NHẬP HÀNG");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("MÃ PHIẾU:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("NGÀY NHẬP:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("NHÂN VIÊN:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("NHÀ C.CẤP:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("TỔNG TIỀN:");

        tb1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "MÃ PN", "NGÀY NHẬP", "TÊN NHÂN VIÊN", "NHÀ CUNG CẤP", "TỔNG TIỀN"
            }
        ));
        tb1.setRowHeight(30);
        tb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb1);

        lblMaPN.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblMaPN.setText("  ");

        cb4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cb4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Chọn Nhân viên]" }));

        cb5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cb5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Chọn Nhà cung cấp]" }));

        lblTien.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTien.setText(" 0");

        btn2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn2.setText("SỬA");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn3.setText("HIỂN THỊ TẤT CẢ");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn4.setText("XEM CHI TIẾT");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("MÃ PHIẾU:");

        cbMaPN.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbMaPN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Chọn Mã phiếu]" }));
        cbMaPN.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMaPNItemStateChanged(evt);
            }
        });

        btnReport.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnReport.setText("IN PHIẾU");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        datePN.setDateFormatString("yyyy - MM - dd");
        datePN.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb5, 0, 270, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGap(118, 118, 118)
                                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(datePN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblMaPN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(42, 42, 42)))
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(btn3)
                        .addGap(52, 52, 52)
                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(228, 228, 228))
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(377, 377, 377)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datePN, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTien, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 1280, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tb1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb1MouseClicked
        // TODO add your handling code here:
        int selectedIndex=tb1.getSelectedRow();
                
        if(tb1.getModel().getValueAt(selectedIndex,0)!=null&&tb1.getModel().getValueAt(selectedIndex,1)!=null&&tb1.getModel().getValueAt(selectedIndex,2)!=null&&tb1.getModel().getValueAt(selectedIndex,3)!=null){
            
            lblMaPN.setText(tb1.getModel().getValueAt(selectedIndex,1).toString());
            datePN.setDate(Date.valueOf(tb1.getModel().getValueAt(selectedIndex,2).toString()));
            
            NhanVienDTO nvDTO=new NhanVienDTO();
            nvDTO.setTEN_NV(tb1.getModel().getValueAt(selectedIndex,3).toString());
            NhanVienBLL nvBLL=new NhanVienBLL();
            cb4.setSelectedItem(nvBLL.getMaNV(nvDTO)+"-"+nvDTO.getTEN_NV());
            
            NCC_DTO nccDTO=new NCC_DTO();
            nccDTO.setTEN_NCC(tb1.getModel().getValueAt(selectedIndex,4).toString());
            NCC_BLL nccBLL=new NCC_BLL();
            cb5.setSelectedItem(nccBLL.getMaNCC(nccDTO)+"-"+nccDTO.getTEN_NCC());
            Locale locale = new Locale("en", "EN");
            String pattern = "###,###.##";
            DecimalFormat decimalFormat = (DecimalFormat)NumberFormat
                .getNumberInstance(locale);
            decimalFormat.applyPattern(pattern); 
            //lblTongDT.setText(decimalFormat.format(doanhThu));
            lblTien.setText(decimalFormat.format(Integer.parseInt(tb1.getModel().getValueAt(selectedIndex,5).toString())));
        }
    }//GEN-LAST:event_tb1MouseClicked

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        loadAll();
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tb1.getSelectedRow();
        String maPN = tb1.getModel().getValueAt(selectedIndex, 1).toString();
        if (cbMaPN.getSelectedIndex() == 0|| !cbMaPN.getSelectedItem().toString().equals(maPN)) {
            try {
                Frm_ChiTietPhieu ctpn = new Frm_ChiTietPhieu();
                ctpn.lblTitle.setText("CHI TIẾT PHIẾU NHẬP");
                ctpn.lblID.setText("Mã phiếu: " + maPN);
                ctpn.setVisible(true);
                ctpn.QLPN = this;
                ChiTietPN_DTO ctpnDTO = new ChiTietPN_DTO();
                ctpnDTO.setMA_PN(maPN);
                ctpn.getCTPN(ctpnDTO);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn Phiếu nhập cần tra cứu chi tiết!", "Thông báo", 0);
            }
        } else {
            Frm_ChiTietPhieu ctpn = new Frm_ChiTietPhieu();
            ctpn.lblTitle.setText("CHI TIẾT PHIẾU NHẬP");
            ctpn.lblID.setText("Mã phiếu: " + cbMaPN.getSelectedItem().toString());
            ctpn.setVisible(true);
            ctpn.QLPN = this;
            ChiTietPN_DTO ctpnDTO = new ChiTietPN_DTO();
            ctpnDTO.setMA_PN(cbMaPN.getSelectedItem().toString());
            ctpn.getCTPN(ctpnDTO);
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        PNhapDTO pnDTO=new PNhapDTO();
        pnDTO.setMA_PN(lblMaPN.getText());
        Date ngay = new Date(datePN.getDate().getTime());
                pnDTO.setNGAY_LAP(ngay);
                if(cb4.getSelectedIndex()==0)
                    JOptionPane.showMessageDialog(null,"Vui lòng chọn Nhân viên thực hiện","Thông báo",0);
                else{
                    String value1=(String) cb4.getSelectedItem();
                    String maNV=""; 
                    for(int i=0;i<value1.length();i++){
                        if(value1.charAt(i)!='-') maNV+=value1.charAt(i);
                        else break;
                    }
                    pnDTO.setMA_NV(maNV);
                    if(cb5.getSelectedIndex()==0)
                        JOptionPane.showMessageDialog(null,"Vui lòng chọn Nhà cung cấp","Thông báo",0);
                    else{
                        String value2=(String) cb5.getSelectedItem();
                        String maNcc=""; 
                        for(int i=0;i<value2.length();i++){
                            if(value2.charAt(i)!='-') maNcc+=value2.charAt(i);
                            else break;
                        }
                        pnDTO.setMA_NCC(maNcc);
                        pnDTO.setTONG_TIEN(Integer.parseInt(lblTien.getText()));
                        PNhapBLL pnBLL=new PNhapBLL();                       
                        if(pnBLL.updatePN(pnDTO)==0) 
                            JOptionPane.showMessageDialog(null,"Sửa Phiếu nhập thất bại!","Thông báo",0);
                        else {
                            JOptionPane.showMessageDialog(null,"Sửa Phiếu nhập thành công!","Thông báo",1);
                            loadAll();
                            lblMaPN.setText("");
                            datePN.setDate(null);
                            cb4.setSelectedIndex(0);
                            cb5.setSelectedIndex(0);
                            lblTien.setText("0");
                        }
                    }
                }
            
        

        
    }//GEN-LAST:event_btn2ActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tb1.getSelectedRow();
        String maPN = tb1.getModel().getValueAt(selectedIndex, 1).toString();
        if (cbMaPN.getSelectedIndex() == 0|| !cbMaPN.getSelectedItem().toString().equals(maPN)) {
            try { 
                PNhapDTO pnDTO=new PNhapDTO();        
                PNhapBLL pnBLL=new PNhapBLL();
                pnDTO.setMA_PN(maPN);
                pnBLL.XuatPN(pnDTO);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn Phiếu nhập cần in!", "Thông báo", 0);
            }
        } else {
            PNhapDTO pnDTO=new PNhapDTO();        
            PNhapBLL pnBLL=new PNhapBLL();
            pnDTO.setMA_PN(cbMaPN.getSelectedItem().toString());
            pnBLL.XuatPN(pnDTO);
        }
    }//GEN-LAST:event_btnReportActionPerformed

    private void cbMaPNItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMaPNItemStateChanged
        // TODO add your handling code here:
        if(cbMaPN.getSelectedIndex()==0) JOptionPane.showMessageDialog(null, "Vui lòng chọn Mã phiếu nhập cần tìm!","Thông báo",0);
        else{
            PNhapDTO pnDTO=new PNhapDTO();
            pnDTO.setMA_PN(cbMaPN.getSelectedItem().toString());
            getPN(pnDTO);
        }
    }//GEN-LAST:event_cbMaPNItemStateChanged

    /**
     * @param args the command line arguments
     */
  
     public void loadAll() {
	String[] header = { "STT","MÃ PN","NGÀY NHẬP","NHÂN VIÊN","NHÀ CUNG CẤP", "TỔNG TIỀN"};
	DefaultTableModel dtm = new DefaultTableModel(header, 0);	 
	ArrayList<PNhapDTO> arr = new ArrayList<PNhapDTO>();
	 PNhapBLL pnBLL = new PNhapBLL();
	 arr = pnBLL.getAllPN();
	 PNhapDTO pnDTO = new PNhapDTO();
	 for (int i = 0; i < arr.size(); i++) {
		 pnDTO = arr.get(i);		 
		 String id = pnDTO.getMA_PN();	
                 
                 Date date=pnDTO.getNGAY_LAP();
                 
                 NhanVienDTO nvDTO=new NhanVienDTO();
                 nvDTO.setMA_NV(pnDTO.getMA_NV());
                 NhanVienBLL nvBLL=new NhanVienBLL();
                 String nv=nvBLL.getTenNV(nvDTO);    
                 
                 NCC_DTO nccDTO=new NCC_DTO();
                 nccDTO.setMA_NCC(pnDTO.getMA_NCC());
                 NCC_BLL nccBLL=new NCC_BLL();
                 String ncc=nccBLL.getTenNCC(nccDTO);
                 
                 int tien=pnDTO.getTONG_TIEN();
                 
		  Object[] row = {i+1, id, date,nv,ncc,tien};
		 dtm.addRow(row);
	 }
	 tb1.setModel(dtm);
    }

     public void getPN(PNhapDTO pnDTO) {
	String[] header = { "STT","MÃ PN","NGÀY NHẬP","NHÂN VIÊN","NHÀ CUNG CẤP", "TỔNG TIỀN"};
	DefaultTableModel dtm = new DefaultTableModel(header, 0);	 
	ArrayList<PNhapDTO> arr = new ArrayList<PNhapDTO>();
	 PNhapBLL pnBLL = new PNhapBLL();
	 arr = pnBLL.searchPN(pnDTO);
	 for (int i = 0; i < arr.size(); i++) {
		 pnDTO = arr.get(i);		 
		 String id = pnDTO.getMA_PN();	
                 
                 Date date=pnDTO.getNGAY_LAP();
                 
                 NhanVienDTO nvDTO=new NhanVienDTO();
                 nvDTO.setMA_NV(pnDTO.getMA_NV());
                 NhanVienBLL nvBLL=new NhanVienBLL();
                 String nv=nvBLL.getTenNV(nvDTO);    
                 
                 NCC_DTO nccDTO=new NCC_DTO();
                 nccDTO.setMA_NCC(pnDTO.getMA_NCC());
                 NCC_BLL nccBLL=new NCC_BLL();
                 String ncc=nccBLL.getTenNCC(nccDTO);
                 
                 int tien=pnDTO.getTONG_TIEN();
                 
		  Object[] row = {i+1, id, date,nv,ncc,tien};
		 dtm.addRow(row);
	 }
         if(arr.size()==0) JOptionPane.showMessageDialog(null, "Phiếu nhập hàng này không tồn tại!","Thông báo",0);
	 tb1.setModel(dtm);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btnReport;
    private javax.swing.JComboBox<String> cb4;
    private javax.swing.JComboBox<String> cb5;
    private javax.swing.JComboBox<String> cbMaPN;
    private com.toedter.calendar.JDateChooser datePN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblMaPN;
    private javax.swing.JLabel lblTien;
    private javax.swing.JPanel panel;
    private javax.swing.JTable tb1;
    // End of variables declaration//GEN-END:variables
}
