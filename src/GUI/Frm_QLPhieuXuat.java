package GUI;

import BLL.ChiTietPX_BLL;
import BLL.KhachHangBLL;
import BLL.NhanVienBLL;
import BLL.PXuatBLL;
import DTO.ChiTietPX_DTO;
import DTO.KhachHangDTO;
import DTO.NhanVienDTO;
import DTO.PXuatDTO;
import java.awt.Color;
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Frm_QLPhieuXuat extends javax.swing.JFrame {

    /**
     * Creates new form Frm_QLPhieuXuat
     */
    public Frm_QLPhieuXuat() {
        initComponents();
        addControl();
        addComboBoxMaPX();
        loadAll();
    }
    
    private void addControl(){
        this.setLocationRelativeTo(null);
        this.setTitle("PHẦN MỀM QUẢN LÝ CỬA HÀNG BÁNH KẸO MAILISA");
        panel.setBackground(Color.WHITE);
        btn3.setBackground(Color.PINK);
        btn4.setBackground(Color.PINK);
        btn5.setBackground(Color.PINK);
        btnReport.setBackground(Color.PINK);
    }

    private void addComboBoxMaPX(){
        ArrayList<PXuatDTO> arr = new ArrayList<PXuatDTO>();
	 PXuatBLL pxBLL = new PXuatBLL();
	 arr = pxBLL.getAllPXuat();	 
	 PXuatDTO pxDTO = new PXuatDTO();
	 for (int i = 0; i < arr.size(); i++) {
		 pxDTO = arr.get(i);
		 cbMaPX.addItem(pxDTO.getMA_PX());		 
	 }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        btnReport = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cbMaPX = new javax.swing.JComboBox<>();
        btn5 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lblTitle.setText("QUẢN LÝ PHIẾU XUẤT");

        tb1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "MÃ PX", "NGÀY XUẤT", "NHÂN VIÊN", "TÊN KHÁCH HÀNG", "TỔNG TIỀN"
            }
        ));
        tb1.setPreferredSize(new java.awt.Dimension(450, 198));
        tb1.setRowHeight(30);
        jScrollPane1.setViewportView(tb1);

        btnReport.setText("IN PHIẾU");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jLabel9.setText("MÃ PHIẾU:");

        cbMaPX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Chọn Mã phiếu xuất]" }));
        cbMaPX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMaPXItemStateChanged(evt);
            }
        });

        btn5.setText("TÌM");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbMaPX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbMaPX, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        btn4.setText("XEM CHI TIẾT");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn3.setText("HIỂN THỊ TẤT CẢ");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(110, 110, 110))
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(464, 464, 464)
                .addComponent(lblTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(lblTitle)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        // TODO add your handling code here:
        if(cbMaPX.getSelectedIndex()==0) JOptionPane.showMessageDialog(null, "Vui lòng chọn Mã phiếu xuất cần tìm!","Thông báo",0);
        else{
            PXuatDTO pxDTO=new PXuatDTO();
            pxDTO.setMA_PX(cbMaPX.getSelectedItem().toString());
            getPX(pxDTO);
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        loadAll();
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        if (cbMaPX.getSelectedIndex() == 0) {
            try {
                int selectedIndex = tb1.getSelectedRow();
                String maPX = tb1.getModel().getValueAt(selectedIndex, 1).toString();

                Frm_ChiTietPhieu ctpx = new Frm_ChiTietPhieu();
                ctpx.lblTitle.setText("CHI TIẾT PHIẾU XUẤT");
                ctpx.lblID.setText("Mã phiếu: " + cbMaPX.getSelectedItem().toString());
                ctpx.setVisible(true);
                ctpx.QLPX = this;
                ChiTietPX_DTO ctpxDTO = new ChiTietPX_DTO();
                ctpxDTO.setMA_PX(maPX);
                ctpx.getCTPX(ctpxDTO);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn Phiếu xuất cần tra cứu chi tiết!", "Thông báo", 0);
            }
        } else {
            Frm_ChiTietPhieu ctpx = new Frm_ChiTietPhieu();
            ctpx.lblTitle.setText("CHI TIẾT PHIẾU XUẤT");
            ctpx.lblID.setText("Mã phiếu: " + cbMaPX.getSelectedItem().toString());
            ctpx.setVisible(true);
            ctpx.QLPX = this;
            ChiTietPX_DTO ctpxDTO = new ChiTietPX_DTO();
            ctpxDTO.setMA_PX(cbMaPX.getSelectedItem().toString());
            ctpx.getCTPX(ctpxDTO);
        }
        
    }//GEN-LAST:event_btn4ActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        
        if (cbMaPX.getSelectedIndex() == 0) {
            try {
                int selectedIndex = tb1.getSelectedRow();
                String maPX = tb1.getModel().getValueAt(selectedIndex, 1).toString();
                PXuatDTO pxDTO = new PXuatDTO();
                PXuatBLL pxBLL = new PXuatBLL();
                pxDTO.setMA_PX(maPX);
                pxBLL.XuatPX(pxDTO);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn Hóa đơn cần in!", "Thông báo", 0);
            }
        } else {
            PXuatDTO pxDTO = new PXuatDTO();
            PXuatBLL pxBLL = new PXuatBLL();
            pxDTO.setMA_PX(cbMaPX.getSelectedItem().toString());
            pxBLL.XuatPX(pxDTO);
        }
    }//GEN-LAST:event_btnReportActionPerformed

    private void cbMaPXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMaPXItemStateChanged
        // TODO add your handling code here:
        btn5.doClick();
    }//GEN-LAST:event_cbMaPXItemStateChanged

    /**
     * @param args the command line arguments
     */
   
    public void loadAll() {
	String[] header = { "STT","MÃ PX","NGÀY XUẤT","NHÂN VIÊN","KHÁCH HÀNG", "TỔNG TIỀN"};
	DefaultTableModel dtm = new DefaultTableModel(header, 0);	 
	ArrayList<PXuatDTO> arr = new ArrayList<PXuatDTO>();
	 PXuatBLL pxBLL = new PXuatBLL();
	 arr = pxBLL.getAllPXuat();
	 PXuatDTO pxDTO = new PXuatDTO();
	 for (int i = 0; i < arr.size(); i++) {
		 pxDTO = arr.get(i);		 
		 String id = pxDTO.getMA_PX();	
                 
                 Date date=pxDTO.getNGAY_LAP();
                 
                 NhanVienDTO nvDTO=new NhanVienDTO();
                 nvDTO.setMA_NV(pxDTO.getMA_NV());
                 NhanVienBLL nvBLL=new NhanVienBLL();
                 String nv=nvBLL.getTenNV(nvDTO);    
                 
                 KhachHangDTO khDTO=new KhachHangDTO();
                 khDTO.setMA_KH(pxDTO.getMA_KH());
                 KhachHangBLL khBLL=new KhachHangBLL();
                 String kh=khBLL.getKHByMaKH(khDTO).getTEN_KH();
                 
                 int tien=pxDTO.getTONG_TIEN();
                 
		  Object[] row = {i+1, id, date,nv,kh,tien};
		 dtm.addRow(row);
	 }
	 tb1.setModel(dtm);
    }
    public void getPX(PXuatDTO pxDTO) {
	String[] header = { "STT","MÃ PX","NGÀY XUẤT","NHÂN VIÊN","KHÁCH HÀNG", "TỔNG TIỀN"};
	DefaultTableModel dtm = new DefaultTableModel(header, 0);	 
	ArrayList<PXuatDTO> arr = new ArrayList<PXuatDTO>();
	 PXuatBLL pxBLL = new PXuatBLL();
	 arr = pxBLL.searchPXuat(pxDTO);
	 for (int i = 0; i < arr.size(); i++) {
		 pxDTO = arr.get(i);		 
		 String id = pxDTO.getMA_PX();	
                 
                 Date date=pxDTO.getNGAY_LAP();
                 
                 NhanVienDTO nvDTO=new NhanVienDTO();
                 nvDTO.setMA_NV(pxDTO.getMA_NV());
                 NhanVienBLL nvBLL=new NhanVienBLL();
                 String nv=nvBLL.getTenNV(nvDTO);    
                 
                 KhachHangDTO khDTO=new KhachHangDTO();
                 khDTO.setMA_KH(pxDTO.getMA_KH());
                 KhachHangBLL khBLL=new KhachHangBLL();
                 String kh=khBLL.getKHByMaKH(khDTO).getTEN_KH();
                 
                 int tien=pxDTO.getTONG_TIEN();
                 
		  Object[] row = {i+1, id, date,nv,kh,tien};
		 dtm.addRow(row);
	 }
         if(arr.size()==0) JOptionPane.showMessageDialog(null, "Phiếu xuất này không tồn tại!","Thông báo",0);
	 tb1.setModel(dtm);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btnReport;
    private javax.swing.JComboBox<String> cbMaPX;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblTitle;
    private javax.swing.JPanel panel;
    private javax.swing.JTable tb1;
    // End of variables declaration//GEN-END:variables
}
